{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.1",
    "title": "Task Manager API",
    "description": "API documentation for Task Manager",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://task-manager-r8dz.onrender.com/api" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User information endpoints"
    },
    {
      "name": "Avatar",
      "description": "User avatar endpoints"
    },
    {
      "name": "Theme",
      "description": "User theme endpoints"
    },
    {
      "name": "Need Help",
      "description": "Need Help endpoints"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "requestBody": {
          "description": "Registration object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Registration_Request"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Registration_Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Login_Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/users/info": {
      "get": {
        "tags": ["User"],
        "summary": "Get user information",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Get_User_Information"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/users/edit": {
      "put": {
        "tags": ["User"],
        "summary": "Update user information",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update information object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User_Edit_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User_Edit_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid update information",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    },
    "/users/avatar": {
      "get": {
        "tags": ["Avatar"],
        "summary": "Get user avatar",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Get_User_Avatar"
                }
              }
            }
          },
          "404": {
            "description": "User or avatar not found",
            "content": {}
          }
        }
      }
    },
    "/users/edit-avatar": {
      "put": {
        "tags": ["Avatar"],
        "summary": "Update user avatar",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Avatar upload object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Add-New_Avatar"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Get_User_Avatar"
                }
              }
            }
          },
          "400": {
            "description": "No file uploaded",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/users/theme": {
      "patch": {
        "tags": ["Theme"],
        "summary": "Update user theme",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Theme update object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Theme_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Theme_Response"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect theme type",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/dashboard/need-help": {
      "post": {
        "tags": ["Need Help"],
        "summary": "Need help endpoint",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Need help object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Need_Help_Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Need_Help_Response"
                }
              }
            }
          },
          "400": {
            "description": "Message must include any text",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Registration_Request": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User name",
            "example": "12345678"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "12345678"
          }
        }
      },
      "Registration_Response": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User name"
              },
              "email": {
                "type": "string",
                "description": "User email"
              }
            }
          }
        }
      },
      "Login_Request": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "12345678"
          }
        }
      },
      "Login_Response": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT token"
          }
        }
      },
      "Get_User_Information": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "User_Edit_Request": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password"
          }
        }
      },
      "User_Edit_Response": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password"
          },
          "token": {
            "type": "string",
            "description": "JWT token"
          },
          "theme": {
            "type": "string",
            "description": "User's theme",
            "enum": ["light", "dark", "violet"]
          },
          "photo": {
            "type": "string",
            "description": "Path to user's avatar"
          }
        }
      },
      "Add-New_Avatar": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "format": "binary",
            "description": "User's avatar file"
          }
        }
      },
      "Get_User_Avatar": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "description": "Path to user's avatar"
          }
        }
      },
      "Theme_Request": {
        "type": "object",
        "properties": {
          "theme": {
            "type": "string",
            "enum": ["light", "dark", "violet"],
            "description": "Theme type"
          }
        }
      },
      "Theme_Response": {
        "type": "object",
        "properties": {
          "theme": {
            "type": "string",
            "description": "User saved theme"
          }
        }
      },
      "Need_Help_Request": {
        "type": "object",
        "required": ["email", "message"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "message": {
            "type": "string",
            "description": "Help message"
          }
        }
      },
      "Need_Help_Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
